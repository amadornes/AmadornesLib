buildscript {
    repositories {
        mavenCentral()
        mvn {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        mvn {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.1-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "0.1"
group= "es.amadornes.lib" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "AmadornesLib"

minecraft {version = "1.6.4-9.11.1.965"}

logger.lifecycle "$archivesBaseName-$version"
 
if (System.getenv("BUILD_NUMBER") != null) {
    version = "MC${minecraft.version}-$version." + System.getenv("BUILD_NUMBER");
    actualVersion += "." + System.getenv("BUILD_NUMBER");
}
else if (new File(projectDir, '.git').exists()) {
    def repo = grgit.repo('.')
    version = "MC${minecraft.version}-$version-${repo.history.log().find().abbreviatedId}"
    actualVersion += "-${repo.history.log().find().abbreviatedId}"
} else {
    version = "MC${minecraft.version}-$version-DEV"
    actualVersion += "-DEV"
}

processResources {
    // replace stuff in text files, not binary ones.
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.lang'
        include '**/*.info'
               
                expand 'version': project.version, 'mcversion': project.minecraft.version
        // replace version and MCVersion
    }
 
    // copy everything else, that's not text
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.lang'
        exclude '**/*.info'
    }
       
}

task cleanTempDir(type: Delete) {
	delete fileTree(dir: "libs")  
}